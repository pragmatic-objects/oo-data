/*-
 * ===========================================================================
 * data-core
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * Copyright (C) 2019 Kapralov Sergey
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * ============================================================================
 */
package com.pragmaticobjects.oo.data.model.source;

import com.pragmaticobjects.oo.tests.Assertion;
import java.nio.file.Files;
import java.nio.file.Path;
import org.assertj.core.api.Assertions;

/**
 * Asserts that file, generated by {@link SourceFile} instance, is located at certain 
 * place and has certain contents
 * 
 * @author skapral
 */
public class AssertSourceFileGenerated implements Assertion {
    private final SourceFile file;
    private final Path path;
    private final String contents;

    /**
     * Ctor.
     * 
     * @param file Source file under test
     * @param path Expected path
     * @param contents Expected contents
     */
    public AssertSourceFileGenerated(SourceFile file, Path path, String contents) {
        this.file = file;
        this.path = path;
        this.contents = contents;
    }
    
    
    @Override
    public final synchronized void check() throws Exception {
        file.generate();
        Assertions.assertThat(Files.exists(path)).withFailMessage("source file <%s> was not created", path).isTrue();
        final String contents = new String(Files.readAllBytes(path));
        Assertions.assertThat(contents).isEqualToNormalizingNewlines(this.contents);
    }
}
